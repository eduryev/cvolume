.. linkall

.. _tutorial:

******************
cvolume Tutorial
******************

Below we show how to use ``cvolume``.

To use ``cvolume``, the first thing you need to do is import it::

    sage: from cvolume import *

Then many functions become available. 

Examples
-------

To start using cvolume, start a Sage session: either in the command line::

    $ sage
  
or a Jupyter notebook, or inside one of the online services). Then type::

    sage: from cvolume import *

To try a first computation, you can compute the completed volume of Q(1,1,1,1), 
which coincides with its Masur-Veech volume, since the stratum is principle::

    sage: completed_volume([1,1,1,1])
    1/15*pi^6

You can also compute the completed volume of Q(3,1), which has Masur-Veech volume 0,
since it is empty::

    sage: completed_volume([3,1])
    23/90*pi^4
  
Apart from computing volumes you can generate labeled stable graph. Here is a an example,
which generated all of labeled stable graphs for stratum [3,1,1,-1]::

    sage: stable_lab_graphs([3,1,1,-1])
    {Labeled Stable Graph with edges = ((0, 1, 1),), loops = (0, 0), kappa = ((1, 1), (3, -1)),
     Labeled Stable Graph with edges = ((0, 1, 1),), loops = (0, 1), kappa = ((1, 1), (3, -1)),
     Labeled Stable Graph with edges = ((0, 1, 1),), loops = (1, 0), kappa = ((1, 1), (3, -1)),
     Labeled Stable Graph with edges = ((0, 1, 1),), loops = (1, 1), kappa = ((1, 1), (3, -1)),
     Labeled Stable Graph with edges = ((0, 1, 2),), loops = (0, 0), kappa = ((1, -1), (3, 1)),
     Labeled Stable Graph with edges = ((0, 1, 2),), loops = (0, 1), kappa = ((1, -1), (3, 1)),
     Labeled Stable Graph with edges = ((0, 1, 3),), loops = (0, 0), kappa = ((1, 1), (3, -1)),
     Labeled Stable Graph with edges = (), loops = (1,), kappa = ((3, 1, 1, -1),),
     Labeled Stable Graph with edges = (), loops = (2,), kappa = ((3, 1, 1, -1),)}

You can also compute a generalized local polynomial for any stratum::

    sage: Nlocal(g=1,n=5,stratum=[5,3,1,1])
    2045/64*b1^4 + 1575/16*b1^2*b2^2 + 2045/64*b2^4 + 1575/16*b1^2*b3^2 + 1575/16*b2^2*b3^2 + 2045/64*b3^4 + 1575/16*b1^2*b4^2 + 1575/16*b2^2*b4^2 + 1575/16*b3^2*b4^2 + 2045/64*b4^4 + 1575/16*b1^2*b5^2 + 1575/16*b2^2*b5^2 + 1575/16*b3^2*b5^2 + 1575/16*b4^2*b5^2 + 2045/64*b5^4

